question 2 : Implémenter la classe statique Factory qui proposera les méthodes suivantes
ajouterTemporaire : nom X type → position dans TI
ajouterEtiquette : nom → position dans TI

question 3 : Implémenter la classe Operande, définissant une opérande dans une instruction 3-adresses. Cette opérande pourra être :
une valeur constante (entier, réel, …)
un identificateur (de variable, constante, type, étiquette, …)

question 4 : Implémenter la classe Instruction qui défini ce qu'est une instruction 3-adresses
un code définiera l'opération (voir ci-dessous pour les différentes instructions disponibles)
trois opérandes
une étiquette (référence à la table des identificateurs, potentiellement vide)


question 5 : Implémenter la classe ConteneurCode qui permet de stocker une suite d'instructions 3-adresses. Cette classe devra permettre (au moins)
d'ajouter une instruction 3-adresses à la fin du bloc courant
d'ajouter les instructions 3-adresses d'un bloc à la fin du bloc courant
Le code 3-adresses



---------------------------------------------------------------------------------
je pense qu'il vaut mieux un tableau de symbole temporaire a part et ne pas le melanger avec les autres, j'aurai aucune idée de comment inclure les temporaires dans la TDI sinon

temporaire
	type
	valInt
	valBool
	valString
	...

essayer de bricoler un truc avec expression
---------------------------------------------------------------------------------

instruction  ( operande, operande, null , null)   a := 5;
instruction  ( operande, operande, operation, operande)  a := 8 + 2;

classe ConteneurCode:

int blocCourant;
std::vector<BlocCode*> tabBlocs;

ajouterInstructionFinBlocCourant(instruction)
ajouterInstructionsFinblocCourant( std::vector<Instruction*> tabInstructions) OU
ajouterInstructionsFinblocCourant( blocCode) après avoir défini son bloc avec la liste d'instructions


classe BlocCode

std::vector<Instruction*> tabInstruction;
	
classe Instruction
	operande1
	operande2
	operande3
	instruction

classe Operande
	tok_ident
	tok_integer
	tok_string
	tok_bool
	...




	

méthode:
	ajouter instructionFinBloc
		
		
